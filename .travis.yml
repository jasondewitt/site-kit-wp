# Site Kit by Google, Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

sudo: required

dist: trusty

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.phpbrew
    - $HOME/.npm

<<<<<<< HEAD
branches:
  only:
    - master
    - develop
=======
env:
  - PANTHEON_SITE="jasondewitt"

# branches:
#   only:
#     - master
#     - develop
>>>>>>> add ssh key and terminus token

# Before install, failures in this section will result in build status 'errored'
before_install:
  - |
    mkdir ~/terminus && \
    pushd ~/terminus && \
    curl -O https://raw.githubusercontent.com/pantheon-systems/terminus-installer/master/builds/installer.phar && \
    php installer.phar install && \
    popd && \
    echo "alias terminus=/home/travis/terminus/vendor/bin/terminus" >> ~/.bashrc
  - |
    if [[ "$WP_VERSION" == "latest" ]]; then
      curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
      WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
      cp /tmp/wordpress/wp-tests-config-sample.php /tmp/wordpress/tests/phpunit/wp-tests-config.php
    fi

before_script:
  - npm install || exit 1
  - composer install
  - |
    if [[ "$PHP" == "1" ]] || [[ "$JS" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      npm install -g gulp-cli
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      export WP_DEVELOP_DIR=/tmp/wordpress
      export WP_TESTS_DIR=/tmp/wordpress/tests/phpunit
      bash tests/bin/install-wp-tests.sh wordpress_test root '' localhost
    fi

script:
  - |
    if [[ "$SNIFF" == "1" ]]; then
      gulp phpcs || exit 1
      npm run lint:js || exit 1
      npm run lint:css || exit 1
    fi
  - |
    if [[ "$JS" == "1" ]]; then
      npm run build || exit 1 # Build for tests.
      npx gulp qunit || exit 1 # QUnit tests
      npm run test || exit 1 # Bundle size test
      travis_retry npm run travis:visualtest || exit 1 # Visual regression tests
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      gulp phpunit || exit 1
    fi
  - |
    if [[ "$E2E" == "1" ]]; then
      npm run build || exit 1 # Build for tests.
      npm run env:start
      npm run env:reset-site
      npm run test:e2e
      npm run env:stop
    fi

jobs:
  allow_failures:
    - php: 7.4snapshot
  include:
    - stage: test
      name: Lint
      php: 7.3
      env: WP_VERSION=4.7 PHPCS_PHP_VERSION='5.4' SNIFF=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: PHP Tests (PHP 5.6, WordPress latest)
    #   php: 5.6
    #   env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: PHP Tests (PHP 7.3, WordPress latest)
    #   php: 7.3
    #   env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: JS Tests
    #   php: 7.3
    #   env: WP_VERSION=latest JS=1
    # - name: PHP Tests (PHP 7.4, WordPress trunk)
    #   stage: test
    #   php: 7.4snapshot
    #   env: WP_VERSION=master PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - stage: test
    #   name: E2E Tests (WordPress latest)
    #   env: E2E=1
    # - stage: test
    #   name: E2E Tests (WordPress 4.7)
    #   env: E2E=1 WP_VERSION=4.7.13
    # - stage: test
    #   name: E2E Tests (WordPress 4.9, Gutenberg 4.9)
    #   env: E2E=1 WP_VERSION=4.9.10 GUTENBERG_VERSION=4.9.0

after_success:
  - mkdir -p ~/.ssh && chmod 700 ~.ssh && echo $PRIVATE_KEY > ~/.ssh/id_rsa && chmod 600 ~.ssh/id_rsa
  - terminus auth:login --machine-token=$TERMINUS_TOKEN
  # clone repo to temp directory
  - mkdir /tmp/repo && pushd /tmp/repo || exit 1
  - git clone $PANTHEON_REPO .
  - terminus multidev:list $PANTHEON_SITE

services:
  - docker
