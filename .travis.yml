# Site Kit by Google, Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

sudo: required

dist: trusty

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.phpbrew
    - $HOME/.npm


branches:
  only:
    - master
    - develop

env:
  global:
    - PANTHEON_SITE="jasondewitt"
    - TERMINUS="/home/travis/terminus/vendor/bin/terminus"


# Before install, failures in this section will result in build status 'errored'
before_install:
  - |
    mkdir ~/terminus && \
    pushd ~/terminus && \
    curl -O https://raw.githubusercontent.com/pantheon-systems/terminus-installer/master/builds/installer.phar && \
    php installer.phar install && \
    popd
  - |
    if [[ "$WP_VERSION" == "latest" ]]; then
      curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
      WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
      cp /tmp/wordpress/wp-tests-config-sample.php /tmp/wordpress/tests/phpunit/wp-tests-config.php
    fi

before_script:
  - npm install || exit 1
  - composer install
  - |
    if [[ "$PHP" == "1" ]] || [[ "$JS" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      npm install -g gulp-cli
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      export WP_DEVELOP_DIR=/tmp/wordpress
      export WP_TESTS_DIR=/tmp/wordpress/tests/phpunit
      bash tests/bin/install-wp-tests.sh wordpress_test root '' localhost
    fi

script:
  - echo "this is a test"
  # - |
  #   if [[ "$SNIFF" == "1" ]]; then
  #     gulp phpcs || exit 1
  #     npm run lint:js || exit 1
  #     npm run lint:css || exit 1
  #   fi
  # - |
  #   if [[ "$JS" == "1" ]]; then
  #     npm run build || exit 1 # Build for tests.
  #     npx gulp qunit || exit 1 # QUnit tests
  #     npm run test || exit 1 # Bundle size test
  #     travis_retry npm run travis:visualtest || exit 1 # Visual regression tests
  #   fi
  # - |
  #   if [[ "$PHP" == "1" ]]; then
  #     gulp phpunit || exit 1
  #   fi
  # - |
  #   if [[ "$E2E" == "1" ]]; then
  #     npm run build || exit 1 # Build for tests.
  #     npm run env:start
  #     npm run env:reset-site
  #     npm run test:e2e
  #     npm run env:stop
  #   fi

jobs:
  allow_failures:
    - php: 7.4snapshot
  include:
    - stage: test
      name: Lint
      php: 7.3
      env: WP_VERSION=4.7 PHPCS_PHP_VERSION='5.4' SNIFF=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: PHP Tests (PHP 5.6, WordPress latest)
    #   php: 5.6
    #   env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: PHP Tests (PHP 7.3, WordPress latest)
    #   php: 7.3
    #   env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - name: JS Tests
    #   php: 7.3
    #   env: WP_VERSION=latest JS=1
    # - name: PHP Tests (PHP 7.4, WordPress trunk)
    #   stage: test
    #   php: 7.4snapshot
    #   env: WP_VERSION=master PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - stage: test
    #   name: E2E Tests (WordPress latest)
    #   env: E2E=1
    # - stage: test
    #   name: E2E Tests (WordPress 4.7)
    #   env: E2E=1 WP_VERSION=4.7.13
    # - stage: test
    #   name: E2E Tests (WordPress 4.9, Gutenberg 4.9)
    #   env: E2E=1 WP_VERSION=4.9.10 GUTENBERG_VERSION=4.9.0

after_success:
  ## decrypt ssh key in.ssh/sitekit_rsa.enc
  - openssl aes-256-cbc -K $encrypted_2a8fab67e230_key -iv $encrypted_2a8fab67e230_iv -in .ssh/sitekit_rsa.enc -out /tmp/sitekit_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/sitekit_rsa
  - ssh-add /tmp/sitekit_rsa
  ## log in on terminus
  - $TERMINUS auth:login --machine-token=$TERMINUS_TOKEN
  - echo -e "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config && chmod 700 ~/.ssh/config
  # clone repo to temp directory
  - export REPO_DIR=$(pwd)
  - mkdir /tmp/repo && pushd /tmp/repo || exit 1
  - git clone $PANTHEON_REPO .
  ## set up multidev site for this PR
  - |
    if [ "$TRAVIS_PULL_REQUEST" != "false" ]
    then
      export PR_BRANCH="pr-${TRAVIS_PULL_REQUEST}"
      ## check if a git branch already exists for this PR on pantheon & check it out, if not create one
      if ! git rev-parse --verify --quiet $PR_BRANCH
      then
        git checkout -b $PR_BRANCH
      else
        git checkout $PR_BRANCH
      fi
      ## copy files from $REPO_DIR to pantheon repo
      mkdir -p wp-content/plugins/google-site-kit   ## ensure plugin dir exists
      rsync -vrxc --delete $REPO_DIR /tmp/repo/wp-content/plugins/google-site-kit/ --exclude-from=$TRAVIS_BUILD_DIR/.ci/rsync-excludes.txt
      git status
      git add .
      git commit -m "${TRAVIS_COMMIT_MESSAGE}"
      git push origin $PR_BRANCH
      ## if multidev site does not already exist
      if ! $TERMINUS multidev:list $PANTHEON_SITE --format=list | grep $PR_BRANCH
      then
        echo "creating site for ${PR_BRANCH}"
        $TERMINUS multidev:create $PANTHEON_SITE.live $PR_BRANCH
      fi
    fi
  - echo "done"


services:
  - docker
